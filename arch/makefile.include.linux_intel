# Compiler mode
CMODE = release             
# options:
# release,
# debug

#compiler   # options:gnu,pgi,intel
COMPILER = intel

# Intel fortran and C
# Precompiler options
CPP_OPTIONS= -DHOST=\"LinuxIFC\"\
             -DMPI -DMPI_BLOCK=8000 -Duse_collective \
             -DscaLAPACK \
             -DCACHE_SIZE=4000 \
             -Davoidalloc \

CPP        = fpp -f_com=no -free -w0  $*$(FUFFIX) $*$(SUFFIX) $(CPP_OPTIONS)

FC         = mpiifort
FCL        = mpiifort -mkl=sequential
CC         = icc
CXX        = icpc

ifeq($(CMODE),debug)
  FFLAGS0 = -module $(OBJDIR) -g -r8 -check all
else
  CMODE = release
  FFLAGS0 = -module $(OBJDIR) -O2 -r8
endif

FFLAGS = $(FFLAGS0)
CFLAGS = -fPIC -DADD_ -Wall -qopenmp -DMAGMA_WITH_MKL -DMAGMA_SETAFFINITY -DGPUSHMEM=300 -DHAVE_CUBLAS

ARCH = ar
ARCHFLAG = cr




FREE       = -free -names lowercase

FFLAGS     = -assume byterecl -w -xHOST
OFLAG      = -O2
OFLAG_IN   = $(OFLAG)
DEBUG      = -O0

MKL_PATH   = $(MKLROOT)/lib/intel64
MKLINCLUDE = -I${MKLROOT}/include/intel64/lp64 -I${MKLROOT}/include
BLAS       =
LAPACK     =
BLACS      = -lmkl_blacs_intelmpi_lp64
SCALAPACK  = $(MKL_PATH)/libmkl_scalapack_lp64.a $(BLACS)


INCS       =-I$(MKLROOT)/include/fftw

LLIBS      = $(SCALAPACK) $(LAPACK) $(BLAS)


OBJECTS_LIB= linpack_double.o getshmem.o

# For the parser library
CXX_PARS   = icpc
LLIBS      += -lstdc++


# DIR of PATH
PROJECT_HOME = ./
SRCDIR = $(PROJECT_HOME)/src
OBJDIR = $(PROJECT_HOME)/obj_$(COMPILER)/$(CMODE)
MODDIR = $(PROJECT_HOME)/mod
BINDIR = $(PROJECT_HOME)/bin



GENCODE_ARCH    := -gencode=arch=compute_30,code=\"sm_30,compute_30\" \
                   -gencode=arch=compute_35,code=\"sm_35,compute_35\" \
                   -gencode=arch=compute_60,code=\"sm_60,compute_60\" \
                   -gencode=arch=compute_70,code=\"sm_70,compute_70\" \
                   -gencode=arch=compute_72,code=\"sm_72,compute_72\"

MPI_INC    = $(I_MPI_ROOT)/include64/
